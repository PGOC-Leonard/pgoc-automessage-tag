services:

  redis:
    image: redis/redis-stack-server:latest
    container_name: redis
    ports:
      - 6390:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  flask-api:
    container_name: automessage-api
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "5000:5000" # Map Flask API to localhost:5000
    volumes:
      - ./automessage-api:/app
    environment:
      FLASK_ENV: development # Optional: set the Flask environment

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/ssl/certs
      - ./certs:/etc/ssl/private
    depends_on:
      - flask-api
    
  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile.api
    command: celery -A config.make_celery worker --loglevel=INFO
    volumes:
      - ./automessage-api:/app
    environment:
      - TZ=Asia/Manila
    depends_on:
      - redis

  react-webapp:
    container_name: react-webapp
    build:
      context: .
      dockerfile: Dockerfile.reactest
    ports:
      - "3000:3000" 
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - flask-api

    
  
  