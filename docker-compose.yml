services:
  redis:
    image: redis/redis-stack-server:latest
    container_name: redis
    ports:
      - "6390:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]

  flask-api:
    container_name: automessage-api
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "5000:5000" # Map Flask API to localhost:5000
    volumes:
      - ./automessage-api:/app
    environment:
      FLASK_ENV: development
      MYSQL_HOST: mysql
      MYSQL_USER: PGOCADMIN
      MYSQL_PASSWORD: "@_PGOCEncrypted54."
      MYSQL_DB: automessage_tag_db
      MYSQL_PORT: 3306
      REDIS_URL: redis://redis:6379/0
      TZ: Asia/Manila
    depends_on:
      - redis
      # - mysql
    healthcheck:
      test: ["CMD", "mysql", "-h", "mysql", "-u", "PGOCADMIN", "-p@_PGOCEncrypted54.", "-e", "SELECT 1;"]
      retries: 5
      interval: 10s
      start_period: 10s
      timeout: 10s

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile.api
    command: celery -A config.make_celery worker --loglevel=INFO
    volumes:
      - ./automessage-api:/app
    environment:
      TZ: Asia/Manila
      MYSQL_HOST: mysql
      MYSQL_USER: PGOCADMIN
      MYSQL_PASSWORD: "@_PGOCEncrypted54."
      MYSQL_DB: automessage_tag_db
      MYSQL_PORT: 3306
    depends_on:
      - redis
      # - mysql

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3308:3306" # Map MySQL container port 3306 to host port 3308
    environment:
      MYSQL_ROOT_PASSWORD: "@_PGOCEncrypted54."
      MYSQL_DATABASE: automessage_tag_db
      MYSQL_USER: PGOCADMIN
      MYSQL_PASSWORD: "@_PGOCEncrypted54." # Password for PGOCADMIN
    volumes:
      - ./mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-u", "PGOCADMIN", "-p@_PGOCEncrypted54.", "-e", "SELECT 1;"]
      retries: 5
      interval: 10s
      start_period: 10s
      timeout: 10s

  react-webapp:
    container_name: react-webapp
    build:
      context: .
      dockerfile: Dockerfile.reactest
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - flask-api

volumes:
  mysql_data:
